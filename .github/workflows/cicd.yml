name: Python CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
        poetry-version: ["1.3.2"]

    steps:
    - uses: actions/checkout@v3

    - if: matrix.os == 'macOS-latest'
      run: |
        brew install md5sha1sum 
        brew install docker

    - if: matrix.os == 'windows-latest'
      run: choco install docker

    - if: matrix.os == 'ubuntu-latest'
      run: |
        # sudo apt-get update && sudo apt-get upgrade
        # sudo apt-get remove docker docker-engine docker.io containerd runc
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo rm get-docker.sh
    
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - uses: abatilo/actions-poetry@v2
      with:
        poetry-version: ${{ matrix.poetry-version }}

    - run: python -m pip install --upgrade pip

    - run: poetry install --only cicd

    - uses: psf/black@stable
      with:
        options: "--check --verbose --color"

    - uses: ludeeus/action-shellcheck@master

    - uses: jpetrucciani/mypy-check@master
      with:
        mypy_flags: '--install-types --non-interactive --config-file pyproject.toml'

    - run: flake8 .
      continue-on-error: true

    - uses: isort/isort-action@master
    - run: isort . --check

    - run: interrogate -c pyproject.toml

    - run: bandit -c pyproject.toml -r .

    - run: coverage run -m pytest discover
    - run: coverage report -m --fail-under=25
