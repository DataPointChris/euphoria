name: Python Continuous Integration

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  ENVIRONMENT: "testing"

jobs:
  validate:
    name: Validate project
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        python-version: ["3.10", "3.11"]
        poetry-version: ["1.3.2"]
        # Current poetry.lock file incompatible < 1.3.2

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Ubuntu installs
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install git-secret gpg

      - name: "git-secret Reveal .env files"
        run: |
          # Import private key and avoid the "Inappropriate ioctl for device" error
          echo ${{ secrets.CICD_GPG_KEY }} | tr ',' '\n' | gpg --batch --yes --pinentry-mode loopback --import
          git secret reveal
          sleep 3
          ls -la
          sleep 1
          cat .test.env

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install poetry
        run: python -m pip install poetry==${{ matrix.poetry-version }}

      - name: Poetry install CICD Dependencies
        run: poetry install --without dev,prod

      - name: Run black formatter
        uses: psf/black@stable
        with:
          options: "--check --verbose --color"

      - name: Run shellcheck
        uses: ludeeus/action-shellcheck@master

      - name: Run mypy
        run: poetry run mypy ichrisbirch --install-types --non-interactive --config-file pyproject.toml

      - name: Run flake8
        run: poetry run flake8 .

      - name: Run isort action
        uses: isort/isort-action@master

      - name: Run iterrogate
        run: poetry run interrogate -c pyproject.toml

      - name: Run bandit
        run: poetry run bandit -c pyproject.toml -r .

      - name: Run pytest coverage
        run: |
          poetry run pytest --cov=ichrisbirch

  deploy:
    needs: [validate]
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ICHRISBIRCH_KEY }}" > ~/.ssh/ichrisbirch.pem
          chmod 600 ~/.ssh/ichrisbirch.pem
      - name: Pull Code from Github and Reinstall Project
        run: |
          ssh -i ~/.ssh/ichrisbirch.pem ubuntu@23.22.30.103 "cd /var/www/ichrisbirch && git pull && poetry install"
      - name: Restart Supervisor
        run: |
          ssh -i ~/.ssh/ichrisbirch.pem ubuntu@23.22.30.103 "sudo supervisorctl reload"
