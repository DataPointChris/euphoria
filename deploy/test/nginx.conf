# server block for 'macmini.local', 'www.macmini.local' domains
server {
        listen 80;
        listen [::]:80;
        # can be name or IP
        server_name macmini.local www.macmini.local;

        # project root where wsgi.py lives
        root /usr/local/var/www/euphoria/euphoria/;

        # redirect any HTTP request to HTTPS
        # return 301 https://$http_host$request_uri;

    location / {
        include proxy_params;
        # file location: /etc/nginx/proxy_params
        # contains common proxy forwarding params

        proxy_pass http://127.0.0.1:4000/;
        # what gets passed to gunicorn, change port to match

        proxy_redirect http://127.0.0.1:4000/ http://$host/;
        # this redirect makes the url_for links work

        # proxy_set_header SCRIPT_NAME /prefix;
        # this is the env variable passed to gunicorn to do prefix appending
        # not needed when using Flask blueprints
    }

    # serve static files
    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
        root    /usr/local/var/www/euphoria/euphoria/backend/app/;
        expires 30d;

    }
}


# server block for 'api.macmini.local' domain
server {
    listen 80;
    listen [::]:80;
    server_name api.macmini.local;
    rewrite ^/$ /docs/ permanent;

    location / {
        include proxy_params;
        proxy_pass http://127.0.0.1:4200;
        
    }
}


# server block for 'books.macmini.local' domain
# server {
#     listen 80;
#     listen [::]:80;
#     server_name books.macmini.local;
#     location /books/ {
#         proxy_pass https://s3.us-east1.amazonaws.com/books-books-books/;
#         # try_files $uri $uri/ =404;
#     }
# }


# default server block 
server {
    # this block will be a default server block listening on port 80
    listen 80 default_server;
    listen [::]:80 default_server;
    # close the connection immediately
    return 444;
}

# server blocks for incoming HTTPS requests
# server {
#     # server block for 'macmini.local', 'www.macmini.local' domains
#     listen [::]:443 ssl;
#     listen 443 ssl;
#     server_name macmini.local www.macmini.local;

#     # SSL configuration by certbot
#     ssl_certificate /etc/letsencrypt/live/macmini.local/fullchain.pem; # managed by Certbot
#     ssl_certificate_key /etc/letsencrypt/live/macmini.local/privkey.pem; # managed by Certbot
#     include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

#     location / {
#         proxy_pass http://localhost:5000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }