You summarize text content into a brief summary and tags.
The summary should be no more than 512 characters and written in imperative style, informational and not as an advertisement.
Suggest a list of appropriate specific tags for the page using keywords but not generic tags.

The following partial list of example tags (and similar tags) are too generic, not useful, and should be avoided.
Also avoid any type of variants of these tags, including shortened, singular, combinations, or plural forms.
Example list of generic, not useful tags:
sync, applications, configuration, programming, efficiency, code, manage, setup, synchronization, applications, configurations

All tags should be lowercase.  Provide 3 - 5 tags.
Return the response in json format with summary and tags as fields.

Use the following Example content, delimited inside """ and example output as a guide:

Example Content:
"""I've been building a terminal development environment for the past decade working as a Dev and Ops engineer in various roles from consultant through team and Tech roles to an architect of the company's product I like effective efficient and fun tools working together for a fast and smooth experience and while most of the bits I'm going to show here were already in existence in some areas I had to hack my way through in one case I even Built My Own open source to solve a problem that I and many others now use we'll get back to that but for now let's start with an overview starting from the basics and will slowly Build It Up in layers to every bit I use to create my perfect environment I use westerm I like its Simplicity speed the way it can render visuals from icons through emojis and all the way to images in the terminal this is yai by the way showing these things beautifully inside westerm westm is super easy to configure it does everything I need it includes quick changes from time to time when I adjust it for videos like this one for example the look is minimal nothing fancy and it fits every use casee I have here's a list of images where the folders and the image icons are nerd font rendered on the left columns while the images themselves are rendered in the terminal to the right I used to run iterm then found alacrity to be the best when it comes to Lin solution moved to kitty for Speed and landed on westerm as the best of all worlds like the others it has its flaws like the lack of native Windows solution for ma for example but nothing I can't deal with to be honest since I've been asked a ton of times and the font westerm uses is jet brains mono and although GitHub are trying to compete with that with a new set of coding fonts jetbrains remains my favorite terminal and Vim font in addition to that I use nerd font for icons that I could use both in my plugins and other areas for nice visuals and West works perfectly with that as for the terminal itself I use zsh just for Simplicity I don't think it's necessarily the best but I never had a good enough prison to move and my tooling is built around zsh and its capabilities while all my zsh probably one of the most widely used projects for terminal lovers as a prompt for zsh I moved about 16 months ago to Starship and honestly never looked back not only Starship is faster it's Slimmer easier to config written and rust and an overall charm to work with I've got a lot of videos covering both my old ways with all my zsh but an even more recent one covering my move to Starship the wise the high and I highly recommend it you can see how Starship helps with my git status it offers even deeper dive when I'm rebasing or cherry picking it can detect my AWS account region and profile as well as my Docker setup kubernetes cluster and a bunch of other plugins I don't use much of these to keep it simple and you can catch my configuration on my do files reper right here as you've probably noticed the layer above my prompt is t-x t-x is a terminal multiplexer I went through every bit of it in a bunch of videos but the most most recommended one is the one right here it'll take you from scratch to beast mode in looks and control of your terminal panes and windows if you recall I told you in the beginning that some of the software I use has its blind spots and that made me cover it with my own open source TAC sessions is one such spot that's the reason I built session X and with other amazing contributors I keep working and enjoying it session X is covered thoroughly in the video up here and you can see how I use it to create and change sessions remove rename pre View and much much more it integrates with tools like Zite for smart pass timinator for templating your environments and the amazing contributors I mentioned earlier made sure that it's fully customizable you can change key bindings Windows Styles and every bit of the plug-in to suit your workflow and style timox comes with its own native bindings for window creation renaming switching and lots of modifications while it has somewhat of a learning curve to get into everything it's fairly easy to get started with and if if you feel it's too much to take go ahead and give zelig a quick test I've got another video covering everything around zelig right up here in terms of terminal based tooling before I head over to my highlight among a bunch of others here are my top CIS that I cannot live without zide to begin with which is a modern R alternative to the famous Zed script is my path switcher put simply it manages a cash of last visited pass and a scoring system to make guesses on where you want to go I cannot recommend recommend it enough if you're unsure or you have multiple paths with ambiguous Solutions it also integrates with fzf that will help you achieve the destination that you wanted from the get-go by the way if you read the documentation it goes through all the options and everything you need to know beyond oide I use many modern Alternatives which for some reason are all rust based like FD dog bat and eza instead of CD for example I use a combination of CD and eza to make everything more readable and navigatable I use fzf extensively for all my fuzzy findings requirements and I made a video about that as well for code searching I mostly use the RG as its Best in Class and its speed will never disappoint you when searching for text my CD alas mentioned earlier can be seen here and it's also on my zshrc on the files repo L stands here as another alas for as a list showing beautiful icons and the git status just to Showcase some icons and the git option check out how every file is covered from Lock files through git ignores the git folder and even NYX flakes are all presented nicely touching one file is added as the git status of n indicating a new untracked file and a modification to one of them shows up next to the file with a blue M indicating it was modified ASI is also capable of showing a nice tree replacing the native command tree with a refreshing look and I have an alas map to LT which is roughly the same as L mentioned earlier but with the eat tree flagged enabled we touched fzf or fzf depending on your side of the pond so bear with me while I switch back and forth this fuzzy finder is one of the absolute best things you can add to your workflow I'm using it multiple times a day when searching through my history of commands but it's also handy when running through files in a directory when you need the quick fuzzy picker the pick can then be piped over to something like X ARS which can load it into new for example I covered Tac session X earlier which by the way is using FZ F's ability to show up in a popup with preview different selections and a customizable window this is all fzf and it goes way just beyond a fuzzy peer I got a video covering everything with the features and options you want to set up it's up here when it comes to the terminal there's nothing like a good Tui these are the terminal user interfaces we've seen yai earlier and here's lazy git one of the tools I use for git operations and the same author had also created lazy Docker that covers running containers and debugging them through a UI of its own I covered both lazy git and lazy Docker in this video up here around neovim git Integrations speaking about neovim the cherry on top of this entire setup is without a doubt neovim most of my channel if I'm honest is covering neovim features plugins setups and other content but here's the gist of it neovim is where I spend most of my terminal hours mostly for coding and writing text but also reviewing changes and organizing local files and configurations notable plugins I can't live without are telescope which is an internal fuzzy picker based on fzf and helps with files like grapping for code buffers and even integrates with other plugins like trouble for example to show markers I left in the code mentioning bugs to-do items and more beyond the essentials there are other Niche but cool plugins that are a huge help when trying to focus like Zen mode and its PA Twilight which I mostly use for writing text as shown in the video above but also when focusing on coding tasks it's also crucially important to mention the messages popping from the language server running in the background and shooting live messages to me as I make mistakes in my code and suggesting fixes this is a simple one for Shell scripts but there are LSPs for pretty much every language you can think of if you want a package manager to install and find them I highly recommend Mason I'll leave a link below my entire new of him setup is covered in a video which should be released in a matter of days so make sure you're subscribed to the channel Channel and get notified when it comes out as you've probably seen I'm very passionate about my environment and tooling one thing to remember is when starting to configure your space is the risk of over Rising things while I think I don't have any hope I started creating content just to justify the hours I spend here so I want to be fair and tell you to take everything with a grain of salt this is an endless world with endless bits of new tooling coming out all the time if you're having fun be my guest but if you feel like you don't just just chill lastly as you've seen I take everything to the terminal including my writing which I do a lot of for journaling newsletters blogging and mostly for my daily notes and for that I use the greatest note taking integration in existence that is truly truly changed how I work and it's right here in this video thank you for watching and I will see you on the next one"""

Example Correct Response:
{"summary": "Learn how to build a terminal development environment with Neovim and Tmux. Setting up tools, configuring fonts and plugins. Compare terminal multiplexers, font choices, and plugins.", "tags": ["neovim", "tmux", "terminal", "multiplexer", "development environment"]}
